<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dgit.mybatis_sample.dao.StudentDao">
	<sql id="selectSql">
		SELECT stud_id, name, email, phone FROM students
	</sql>

	<sql id="whereSql">
		<where>
			<if test="studId != null">
				stud_id = #{studId}
			</if>
		</where>
	</sql>

	<select id="selectStudentByNo" parameterType="Student"
		resultType="Student">
		<include refid="selectSql" />
		<include refid="whereSql" />
		<!-- SELECT stud_id, name, email, phone FROM students where stud_id=#{studId}; -->
	</select>

	<select id="selectStudentByAll" resultType="Student">
		<include refid="selectSql" />
		<!-- SELECT stud_id, name, email, phone FROM students -->
	</select>


	<!-- insert -->
	<sql id="insertSql">
		insert into students(stud_id, name, email, phone, dob)
		values(#{studId}, #{name}, #{email}, #{phone}, #{dob})
	</sql>

	<insert id="insertStudent" parameterType="Student">
		<include refid="insertSql" />
	</insert>

	<!-- update -->
	<sql id="updateSql">
		update students set name=#{name}, email=#{email}, phone=#{phone}, dob=#{dob} 
	</sql>
	<update id="updateStudent" parameterType="Student">
		<include refid="updateSql"/>
		<include refid="whereSql"/>
	</update>
	<!-- delete -->
	<sql id="deleteSql">
		delete from students where stud_id=#{studId}
	</sql>
	<delete id="deleteStudent" parameterType="int">
		<include refid="deleteSql"/>
	</delete>
	<sql id="selectSql2">
		SELECT stud_id, name, email, phone FROM students
	</sql>
	
	<!-- resultMap을 이용 -->
	<resultMap type="Student" id="StudentResult">
		<id property="studId" column="stud_id"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
		<result property="phone" column="phone"/>
		<result property="dob" column="dob"/>
	</resultMap>
	
	<!-- hashmap이용 -->
	<select id="selectStudentByAllForHashMap" resultType="map">
		<include refid="selectSql2"></include>
	</select>	
	<select id="selectStudentByAllForHashMapWithAPI" resultType="map">
		<include refid="selectSql2"></include>
	</select>	
	
	
	<sql id="selectJoinAddressSql">
		SELECT stud_id, name, email, phone, a.addr_id, city, state, zip, 
		country FROM students s left join addresses a on s.addr_id=a.addr_id
	</sql>
	
	<select id="selectStudentByNoForResultMapExtends" parameterType="Student" resultMap="StudentWithAddressResult">
		<include refid="selectJoinAddressSql"/>
		<include refid="whereSql"/>
	</select>
	
	<select id="selectStudentByNoForResultMapExtendsWithAPI" parameterType="Student" resultMap="StudentWithAddressResult">
		<include refid="selectJoinAddressSql"/>
		<include refid="whereSql"/>
	</select>
	
	<resultMap type="Student" id="StudentWithAddressResult" extends= "StudentResult">
		<result property="address.addrId" column="addrId"/>
		<result property="address.city" column="city"/>
		<result property="address.state" column="state"/>
		<result property="address.zip" column="zip"/>
		<result property="address.country" column="country"/>
	</resultMap>
	
	<select id="selectStudentByAllForResultMap" resultMap="StudentResult">
		<include refid="selectSql2"/>
	</select>
	
	<resultMap type="Student" id="StudentAssociation" extends="StudentResult">
		<association property="address" resultMap="kr.or.dgit.mybatis_sample.mappers.addressDao.AddressResult" />
	</resultMap>

	<select id="selectStudentByNoAssociation" parameterType="Student" resultMap="StudentAssociation"></select>
</mapper>